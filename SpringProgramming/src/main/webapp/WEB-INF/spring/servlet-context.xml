<?xml version="1.0" encoding="UTF-8"?>	<!-- xml선언 -->
<!-- 아래 루트엘리먼트는 하나만잇어야한다. -->
<beans:beans xmlns="http://www.springframework.org/schema/mvc"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:beans="http://www.springframework.org/schema/beans"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:jee="http://www.springframework.org/schema/jee"
	xsi:schemaLocation="http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc.xsd
		http://www.springframework.org/schema/jee http://www.springframework.org/schema/jee/spring-jee-4.3.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd">
		
		
	<!-- DispatcherServlet Context: defines this servlet's request-processing infrastructure -->
	
	<!-- Enables the Spring MVC @Controller programming model -->
	<annotation-driven />

	<!-- Handles HTTP GET requests for /resources/** by efficiently serving up static resources in the ${webappRoot}/resources directory -->
	<resources mapping="/resources/**" location="/resources/" />

	<!-- Resolves views selected for rendering by @Controllers to .jsp resources in the /WEB-INF/views directory -->
	<!-- 예약된 이름이 있기때문에 name을 주지 않는다. ref가 아니고 value인것은 값이기때문에-->
	<beans:bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<beans:property name="prefix" value="/WEB-INF/views/" />
		<beans:property name="suffix" value=".jsp" />
	</beans:bean>
	
	<context:component-scan base-package="com.mycompany.myapp" />
	<!-- component는 스프링이 관리해야할 객체 -->
	<!-- base-package 를 기준으로 그아래 패키지내에서만 찾는다. -->
	
	<!-- A를 관리 객체로 생성  -->
	<beans:bean name="a" class="com.mycompany.myapp.exam09.A"/>
	
	<!-- B를 관리 객체로 생성  -->
	<beans:bean name="b" class="com.mycompany.myapp.exam09.B"/>
	
	<!-- ServiceA를 관리 객체로 생성  -->
	<beans:bean name="serviceA" class="com.mycompany.myapp.exam09.ServiceA"/>
	
	<!-- ServiceB를 관리 객체로 생성  -->
	<beans:bean name="serviceB" class="com.mycompany.myapp.exam09.ServiceB"/>
	
	<!-- ServiceCImpl1를 관리 객체로 생성  -->
	<!-- 서비스씨임플1을 2로 바꾸고 싶으면 클래스 이름을 1에서 2로만 바꿔주명 된다 -->
	<beans:bean name="serviceCImpl1" class="com.mycompany.myapp.exam09.ServiceCImpl2"/>
	
	<!-- ServiceDImpl1를 관리 객체로 생성  -->
	<!-- 서비스씨임플1을 2로 바꾸고 싶으면 클래스 이름을 1에서 2로만 바꿔주명 된다 -->
	<beans:bean name="serviceDImpl1" class="com.mycompany.myapp.exam09.ServiceDImpl2"/>
	
	<!-- C를 관리 객체로 생성 -->
	<beans:bean name="c" class="com.mycompany.myapp.exam09.C">
		<beans:constructor-arg ref="d"/>
	</beans:bean>
	
	<!-- D를 관리 객체로 생성 -->
	<beans:bean name="d" class="com.mycompany.myapp.exam09.D"/>
	
	<!-- E를 관리 객체로 생성 -->
	<beans:bean name="e" class="com.mycompany.myapp.exam09.E">
		<beans:constructor-arg ref="b"/>
		<beans:constructor-arg ref="d"/>
	</beans:bean>
	
	<!-- F를 관리 객체로 생성 -->
	<beans:bean name="f" class="com.mycompany.myapp.exam09.F">
		<beans:constructor-arg ref="serviceA"/>
		<beans:constructor-arg ref="serviceB"/>
		<beans:constructor-arg ref="serviceCImpl1"/>
	</beans:bean>
	<!-- Exam09Controller 객체를 찾아서 가져오기 -->
	<!-- 이객체로 된이름을 가지고와라 , 이름 첫글자는 소문자로 만들어진다. -->
	<beans:bean name="exam09Controller" class="com.mycompany.myapp.exam09.Exam09Controller">
		<!-- Setter 주입 
		<beans:property name="setter이름" ref="매개값으로 전달할 객체(관리객체이름)"/>	
		-->
		<beans:property name="a" ref="a"/>
		<beans:property name="b" ref="b"/>
		<beans:property name="serviceA" ref="serviceA"/>
		<beans:property name="serviceB" ref="serviceB"/>
		<beans:property name="serviceC" ref="serviceCImpl1"/>
		<beans:property name="serviceD" ref="serviceDImpl1"/>
		<beans:property name="c" ref="c"/>
		<beans:property name="e" ref="e"/>
		<beans:property name="f" ref="f"/>


	</beans:bean>
	
	<!-- Connection Pool -->
	 
	<beans:bean name="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource">   
		<beans:property name="driverClass" value="oracle.jdbc.OracleDriver"/>  
		<beans:property name="jdbcUrl" value="jdbc:oracle:thin:@106.253.56.123:1521:orcl"/>   
		<beans:property name="user" value="kosauser12"/>   
		<beans:property name="password" value="kosa12345"/>
		<beans:property name="maxPoolSize" value="3"/>   
		<beans:property name="initialPoolSize" value="1"/>   
		<beans:property name="acquireIncrement" value="1"/>   
		<beans:property name="minPoolSize" value="1"/>   
	</beans:bean>
	 
	 <!-- 
	 <jee:jndi-lookup id="dataSource" jndi-name="jdbc/orcl"/>
	  -->
	  
	 <!-- JdbcTemplate 객체 생성 -->
	 <!-- 커넥션풀을 이용할수 있도록 커넥션풀을 주입해야 한다. -->
	 <beans:bean name="jdbcTemplate" class="org.springframework.jdbc.core.JdbcTemplate">
	 	<beans:property name="dataSource" ref="dataSource"/>
	 </beans:bean>
</beans:beans>
